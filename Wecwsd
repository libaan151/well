_G.Prediction = ( .18 ) -- [ Lower Prediction: Lower Ping | Higher Prediction: Higher Ping ]
_G.FOV = ( 100 )
_G.AimKey = ( "c" )
--[[
Do not edit anything under this.
]]
local SilentAim = true
local LocalPlayer = game:GetService("Players").LocalPlayer
local Players = game:GetService("Players")
local Mouse = LocalPlayer:GetMouse()
local Camera = game:GetService("Workspace").CurrentCamera
local UIS = game:GetService("UserInputService")
local CanCraftPart = false
hookmetamethod = hookmetamethod
Drawing = Drawing
getnamecall_method = getnamecall_method
getnamecallmethod = getnamecallmethod
newcclosure = newcclosure
hide_me = hide_me
getrawmetatable = getrawmetatable
is_protosmasher_caller = is_protosmasher_caller
checkcaller = checkcaller
Cer = Cer
setreadonly = setreadonly
make_writeable = make_writeable
local getnamecallmethod = getnamecallmethod or getnamecall_method
local newcclosure = newcclosure or hide_me or function(func)
return func
end
local checkcaller = checkcaller or is_protosmasher_caller or Cer.isCerus
local mt = getrawmetatable(game)
local mt_index, mt_namecall = mt.__index, mt.__namecall
if setreadonly then
setreadonly(mt, false)
elseif make_writeable then
make_writeable(mt, true)
end
local FOV_CIRCLE = Drawing.new("Circle")
FOV_CIRCLE.Visible = false
FOV_CIRCLE.Filled = false
FOV_CIRCLE.Thickness = 1
FOV_CIRCLE.Transparency = 1
FOV_CIRCLE.Color = Color3.new(0, 1, 0)
FOV_CIRCLE.Radius = _G.FOV
FOV_CIRCLE.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
Options = {
UpperTorso = "HumanoidRootPart";
Head = "Head";
}
local function EyeFrames()
CanCraftPart = true
if CanCraftPart then
local Apple = Instance.new("Part", workspace)
Apple.Name = "Apple"
Apple.Anchored = true
Apple.CanCollide = false
Apple.Size = Vector3.new(1.3,2,1)
Apple.Transparency = 1
end
CanCraftPart = false
end
local function MoveFovCircle()
pcall(function()
local DoIt = true
spawn(function()
while DoIt do task.wait()
FOV_CIRCLE.Position = Vector2.new(Mouse.X, (Mouse.Y + 36))
end
end)
end
